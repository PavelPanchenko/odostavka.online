services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: food_delivery_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - food_delivery_network
    restart: unless-stopped

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: food_delivery_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - food_delivery_network
    restart: unless-stopped

  # API сервис (подключается к локальной БД)
  api:
    build:
      context: ./food-delivery-api
      dockerfile: ./Dockerfile
    container_name: food_delivery_api
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - food_delivery_network
    restart: unless-stopped

  # Клиент
  client:
    build:
      context: ./food-delivery-client
      dockerfile: ./Dockerfile
    container_name: food_delivery_client
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${CLIENT_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_API_DOMAIN=${CLIENT_API_DOMAIN:-localhost}
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - food_delivery_network
    restart: unless-stopped

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: food_delivery_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api
      - client
    networks:
      - food_delivery_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  food_delivery_network:
    driver: bridge
